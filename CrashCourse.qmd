---
title: Crash Course in Git, Quarto, and R
author: 
  - name: Chloe Wright
    email: chloe.wright4@snhu.edu
    affiliations: 
      - name: Southern New Hampshire University
format: html
date: 1/07/2025
date-modified: today
date-format: long
theme: yeti
toc: true
---

## Working with Data

###Loading Data

```{r}
#| message: false
#| code-fold: true

library(tidyverse)
library(tidymodels)
library(skimr)
library(kableExtra)

 hits <- read_csv("https://raw.githubusercontent.com/agmath/agmath.github.io/refs/heads/master/data/classification/battedballs.csv")
parks <- read_csv("https://raw.githubusercontent.com/agmath/agmath.github.io/refs/heads/master/data/classification/park_dimensions.csv")
```

## Exploring Our Data

```{r}
hits |>
  head() 
```

```{r}
parks |>
  head()
```

## Joining the Data

```{r}
hits <- hits |>
  left_join(parks, by = c("park" = "park"))
```


We joined the `hits` and `parks` data together, to obtain a full data set with `r nrow(hits)` rows and `r ncol(hits)` columns.

Initial Exploration

```{r}
hits |>
  head() 
```

```{r}
hits |>
  glimpse()
```

Skimming the data set
```{r}
hits |>
  skim()
```

Split into training and test data

```{r}
set.seed(434)
data_splits <- initial_split(hits, 0.85, strata = is_home_run)

train <- training(data_splits)
test <- testing(data_splits)
```

## Exploratory Data Analysis

Filtering rows

```{r}
train |> 
  filter(is_home_run == 1)

train |>
  filter(launch_angle > 45)

train |> 
  filter(str_detect(NAME, "Fenway"))
```

Selecting just a few columns

```{r}
train |> 
  select(launch_speed, launch_angle, is_home_run)
```

Building new variables from old ones (*Feature Engineering*)

```{r}
train |>
  mutate(fast_pitch = ifelse(pitch_mph > 100, "yes", "no"))
```

### Summary Statistics

Home runs...

```{r}
train |>
  count(is_home_run) |>
  mutate(prop = 100*n/sum(n))
```

```{r}
train |> 
  summarize(pct_hr = 100*mean(is_home_run))
```

Summarizing Launch Angle...

```{r}
train |>
  filter(!is.na(launch_angle)) |>
  summarize(
    min_angle = min(launch_angle),
    mean_angle = mean(launch_angle),
    median_angle = median(launch_angle),
    max_angle = max(launch_angle),
    sd_angle = sd(launch_angle)
  )
```

#### Grouped Summaries

```{r}
train |>
  group_by(is_home_run) |>
  filter(!is.na(launch_angle)) |>
  summarize(
    min_angle = min(launch_angle),
    mean_angle = mean(launch_angle),
    median_angle = median(launch_angle),
    max_angle = max(launch_angle),
    sd_angle = sd(launch_angle)
  ) |>
  kable()
```













